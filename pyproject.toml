[build-system]
requires = ["setuptools>=68"]
build-backend = "setuptools.build_meta"

[project]
name = "bmad-method"
version = "0.1.0"
description = "Serviços principais e ferramentas de suporte da plataforma Bmad Method"
requires-python = ">=3.10"
dependencies = [
  "pytest==8.2.2",
  "pytest-cov==5.0.0",
  "bandit==1.7.9",
  "pip-audit==2.7.3",
  "pyyaml==6.0.1",
  "fastapi==0.120.3",
  "uvicorn==0.30.1",
  "sqlalchemy==2.0.30",
  "pydantic==2.6.4",
  "strawberry-graphql==0.257.0",
  "httpx==0.27.0",
  "anyio==4.4.0",
  "psycopg[binary]==3.1.18",
  "opentelemetry-api==1.25.0",
  "opentelemetry-sdk==1.25.0",
  "opentelemetry-exporter-otlp==1.25.0",
  "opentelemetry-instrumentation-fastapi==0.46b0",
  "opentelemetry-instrumentation-sqlalchemy==0.46b0",
  "requests==2.32.4",
  "email-validator==2.1.1",
  "python-multipart==0.0.9",
  "pandas==2.2.2",
]

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
include = [
  "services*",
  "quality*",
]
exclude = [
  "design*",
  "grafana*",
  "packages*",
  "apps*",
  "analytics*",
  "node_modules*",
  "tests*",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra"
testpaths = [
  "tests",
]
markers = [
  "unit: testes unitários de componentes isolados",
  "integration: testes de integração que validam orquestrações e requisitos de privacidade",
  "e2e: cenários ponta a ponta que simulam fluxos completos do MVP",
  "reservations: cenários críticos de reservas e gestão de disponibilidade",
  "payments: fluxos de tokenização, captura e reconciliação",
  "ota: contratos e integrações com parceiros OTA"
]
